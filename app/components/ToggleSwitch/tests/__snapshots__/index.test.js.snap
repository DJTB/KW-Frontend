// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ToggleSwitch /> should adopt custom props 1`] = `
.bGABgj {
  display: inline-block;
  position: relative;
  width: 12rem;
  height: 4rem;
  cursor: pointer;
  vertical-align: middle;
  visibility: hidden;
}

.bGABgj:focus:before {
  outline: 2px solid purple;
}

.bGABgj:before {
  display: block;
  visibility: visible;
  content: "";
  width: 12rem;
  height: 4rem;
  position: relative;
  background-color: #e2b46a;
  background: linear-gradient(#dba348 0%, #e2b46a 100%);
  border: 1px solid #616161;
  border-radius: 50px;
  -webkit-transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
  transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
}

.bGABgj:after {
  display: block;
  visibility: visible;
  position: absolute;
  content: "";
  width: calc((12rem / 3) - 4px);
  height: calc((4rem) - 4px);
  top: 1px;
  -webkit-transform: translateX(calc((12rem - (12rem /3)) + 2px));
  -ms-transform: translateX(calc((12rem - (12rem /3)) + 2px));
  transform: translateX(calc((12rem - (12rem /3)) + 2px));
  -webkit-transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
  transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
  border: 5px solid #fafafa;
  border-radius: 50px;
  background-color: #ababab;
  background: linear-gradient(#d1d1d1 0%, #f0f0f0 100%);
  box-shadow: 0 2px 5px #616161;
}

<withState(withHandlers(Component))
  height="4rem"
  id="toggle2"
  isToggled={false}
  name="someToggle2"
  toggleOffColor="tan"
  toggleOnColor="purple"
  width="12rem"
>
  <withHandlers(Component)
    height="4rem"
    id="toggle2"
    isToggled={false}
    name="someToggle2"
    toggleOffColor="tan"
    toggleOnColor="purple"
    updateToggle={[Function]}
    width="12rem"
  >
    <styled.input
      height="4rem"
      id="toggle2"
      isToggled={false}
      name="someToggle2"
      onChange={[Function]}
      toggleOff={[Function]}
      toggleOffColor="tan"
      toggleOn={[Function]}
      toggleOnColor="purple"
      type="checkbox"
      updateToggle={[Function]}
      width="12rem"
    >
      <input
        className="sc-bdVaJa bGABgj"
        height="4rem"
        id="toggle2"
        name="someToggle2"
        onChange={[Function]}
        type="checkbox"
        width="12rem"
      />
    </styled.input>
  </withHandlers(Component)>
</withState(withHandlers(Component))>
`;

exports[`<ToggleSwitch /> should match baseline snapshot 1`] = `
.hmLNto {
  display: inline-block;
  position: relative;
  width: 6rem;
  height: 2rem;
  cursor: pointer;
  vertical-align: middle;
  visibility: hidden;
}

.hmLNto:focus:before {
  outline: 2px solid purple;
}

.hmLNto:before {
  display: block;
  visibility: visible;
  content: "";
  width: 6rem;
  height: 2rem;
  position: relative;
  background-color: #e2325b;
  background: linear-gradient(#ce1d46 0%, #e2325b 100%);
  border: 1px solid #616161;
  border-radius: 50px;
  -webkit-transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
  transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
}

.hmLNto:after {
  display: block;
  visibility: visible;
  position: absolute;
  content: "";
  width: calc((6rem / 3) - 4px);
  height: calc((2rem) - 4px);
  top: 1px;
  -webkit-transform: translateX(calc((6rem - (6rem /3)) + 2px));
  -ms-transform: translateX(calc((6rem - (6rem /3)) + 2px));
  transform: translateX(calc((6rem - (6rem /3)) + 2px));
  -webkit-transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
  transition: all .5s cubic-bezier(0.230,  1.000, 0.320, 1.000);
  border: 5px solid #fafafa;
  border-radius: 50px;
  background-color: #ababab;
  background: linear-gradient(#d1d1d1 0%, #f0f0f0 100%);
  box-shadow: 0 2px 5px #616161;
}

<withState(withHandlers(Component))
  height="2rem"
  id="toggle1"
  isToggled={true}
  name="someToggle1"
  toggleOffColor="red"
  toggleOnColor="green"
  width="6rem"
>
  <withHandlers(Component)
    height="2rem"
    id="toggle1"
    isToggled={false}
    name="someToggle1"
    toggleOffColor="red"
    toggleOnColor="green"
    updateToggle={[Function]}
    width="6rem"
  >
    <styled.input
      height="2rem"
      id="toggle1"
      isToggled={false}
      name="someToggle1"
      onChange={[Function]}
      toggleOff={[Function]}
      toggleOffColor="red"
      toggleOn={[Function]}
      toggleOnColor="green"
      type="checkbox"
      updateToggle={[Function]}
      width="6rem"
    >
      <input
        className="sc-bdVaJa hmLNto"
        height="2rem"
        id="toggle1"
        name="someToggle1"
        onChange={[Function]}
        type="checkbox"
        width="6rem"
      />
    </styled.input>
  </withHandlers(Component)>
</withState(withHandlers(Component))>
`;
