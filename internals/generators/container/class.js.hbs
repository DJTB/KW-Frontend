import React from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
{{#if wantHeaders}}
import Helmet from 'react-helmet';
{{/if}}
{{#if wantActionsAndReducer}}
import { createStructuredSelector } from 'reselect';
{{/if}}

{{#if wantActionsAndReducer}}
import makeSelect{{ properCase name }} from './selectors';
{{/if}}

export class {{ properCase name }} extends {{{ type }}} { // eslint-disable-line react/prefer-stateless-function
  static propTypes = {
    dispatch: PropTypes.func.isRequired,
  }

  render() {
    return (
      <div>
      {{#if wantHeaders}}
        <Helmet
          title="{{ properCase name }}"
          meta={{curly true}}[
            {{curly true}} name: 'description', content: 'Description of {{ properCase name }}' {{curly}},
          ]{{curly}}
        />
      {{/if}}
        <h1>Hello {{ properCase name }}</h1>
      </div>
    );
  }
}

{{#if wantActionsAndReducer}}
const mapStateToProps = createStructuredSelector({
  {{ camelCase name }}: makeSelect{{ properCase name }}(),
});
{{/if}}

function mapDispatchToProps(dispatch) {
  return {
    dispatch,
  };
}

{{#if wantActionsAndReducer}}
export default connect(mapStateToProps, mapDispatchToProps)({{ properCase name }});
{{else}}
export default connect(null, mapDispatchToProps)({{ properCase name }});
{{/if}}
