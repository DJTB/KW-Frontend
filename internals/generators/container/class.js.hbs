import React from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
{{#if wantHeaders}}
import { Helmet } from 'react-helmet';
{{/if}}
{{#if wantActionsAndReducer}}
import { createStructuredSelector } from 'reselect';

import {{ camelCase name }} from './actions';
import makeSelect{{ properCase name }} from './selectors';
{{/if}}

export class {{ properCase name }} extends {{{ type }}} { // eslint-disable-line react/prefer-stateless-function
  static propTypes = {
    load{{ properCase name }}: PropTypes.func.isRequired,
    {{ camelCase name }}State: PropTypes.string,
  }

  render() {
    return (
      <div>
      {{#if wantHeaders}}
        <Helmet>
          <title>{{ properCase name }}</title>
          <meta name="description" content="Kaniwani {{ properCase name }}" />
        </Helmet>
      {{/if}}
        <h1>Hello {{ properCase name }}</h1>
      </div>
    );
  }
}

{{#if wantActionsAndReducer}}
const mapStateToProps = createStructuredSelector({
  {{ camelCase name }}State: makeSelect{{ properCase name }}(),
});

const mapDispatchToProps = (dispatch)  => ({
  load{{ properCase name }}: () => dispatch({{ camelCase name }}.load.request()),
});
{{/if}}

{{#if wantActionsAndReducer}}
export default connect(mapStateToProps, mapDispatchToProps)({{ properCase name }});
{{else}}
export default connect(null, mapDispatchToProps)({{ properCase name }});
{{/if}}
